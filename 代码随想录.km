{
    "root": {
        "data": {
            "id": "cip5t7dbs940",
            "created": 1647826691098,
            "text": "目录",
            "expandState": "expand"
        },
        "children": [
            {
                "data": {
                    "id": "cip5u6lftu80",
                    "created": 1647826767776,
                    "text": "数组",
                    "expandState": "expand",
                    "layout": null
                },
                "children": [
                    {
                        "data": {
                            "id": "cip5ytiz1yg0",
                            "created": 1647827131150,
                            "text": "二分查找",
                            "note": "``` java\nif (target < nums[0] || target > nums[nums.length - 1]){\n\treturn -1;\n}\n\nint left = 0,rights = nums.length - 1\n;\n\nwhile(left<=right){\n\tint mid = left + (rights-left)/2;\n    if(nums[mid]<target){\n    \tleft = mid+1;\n    }else if(nums[mid]>target){\n    \tright = mid - 1;\n    }else {\n    \treturn mid;\n    }\n\n}\nreturn -1\n```",
                            "expandState": "expand",
                            "layout": null
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "cip62377jm00",
                                    "created": 1647827387299,
                                    "text": "35 搜索插入的位置 ",
                                    "progress": 9,
                                    "expandState": "expand",
                                    "layout": null
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "cip62827tig0",
                                    "created": 1647827397881,
                                    "text": "34 在排序数组中查找元素的第一个和最后一个位置",
                                    "progress": 5,
                                    "note": "```\nclass Solution {\n    public int[] searchRange(int[] nums, int target) {\n        int[] res = new int[]{-1,-1};\n        res[0] = binarySearch(nums,target,true);\n        res[1] = binarySearch(nums,target,false);\n        return res;\n    }\n\n    private int binarySearch(int[] nums,int target,boolean leftOrRight){\n        int res  = -1;\n        int left = 0;\n        int right = nums.length-1;\n        int mid;\n        while(left<=right){\n             mid = left+(right-left)/2;\n            if(target < nums[mid]){\n                right = mid -1;\n            }else if(target > nums[mid]){\n                left = mid +1;\n            }else{\n                res = mid;\n                if(leftOrRight){\n                    right=mid - 1;\n                }else{\n                    left = mid +1;\n                }\n            }\n\n        }\n        return res;\n    }\n}\n\n```",
                                    "expandState": "expand",
                                    "layout": null
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "cip62i567o00",
                                    "created": 1647827419827,
                                    "text": "69 x的平方根",
                                    "expandState": "expand",
                                    "layout": null,
                                    "note": "``` java\n\nclass Solution {\n    public int mySqrt(int x) {\n       int low = 0;\n       int high = x;\n       int ans = -1;\n       while(low<=high){\n         int mid = low + (high - low) /2;\n         if ((long)mid * mid<=x){\n             low = mid +1;\n             ans = mid;\n         }else{\n            high = mid -1;\n         }\n       }\n       return ans;\n    }\n}\n\n```",
                                    "progress": 5
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "cip62nhhczs0",
                                    "created": 1647827431455,
                                    "text": "367 有效的完全平方根",
                                    "expandState": "expand",
                                    "layout": null,
                                    "note": "```\n\nclass Solution {\n    public boolean isPerfectSquare(int num) {\n        int left = 0;\n        int right = num;\n        while(left<=right){\n            int mid = left + (right - left) /2;\n            if ((long) mid* mid <num){\n                left = mid +1;\n            }else if((long) mid * mid > num){\n                right = mid - 1;\n            }else{\n                return true;\n            }\n        }\n        return false;\n    }\n}\n\n```",
                                    "progress": 5
                                },
                                "children": []
                            }
                        ]
                    }
                ]
            },
            {
                "data": {
                    "id": "cip5u7hprfs0",
                    "created": 1647826769728,
                    "text": "链表",
                    "expandState": "expand",
                    "layout": null
                },
                "children": []
            },
            {
                "data": {
                    "id": "cip5uduvd680",
                    "created": 1647826783584,
                    "text": "哈希表",
                    "expandState": "expand",
                    "layout": null
                },
                "children": []
            },
            {
                "data": {
                    "id": "cip5umbsra00",
                    "created": 1647826802022,
                    "text": "字符串",
                    "expandState": "expand",
                    "layout": null
                },
                "children": []
            },
            {
                "data": {
                    "id": "cip5uoak8wg0",
                    "created": 1647826806300,
                    "text": "双指针",
                    "expandState": "expand",
                    "layout": null
                },
                "children": []
            },
            {
                "data": {
                    "id": "cip5uqhal800",
                    "created": 1647826811061,
                    "text": "栈与队列",
                    "expandState": "expand",
                    "layout": null
                },
                "children": []
            },
            {
                "data": {
                    "id": "cip5v0wfbps0",
                    "created": 1647826833744,
                    "text": "二叉树",
                    "expandState": "expand",
                    "layout": null
                },
                "children": []
            },
            {
                "data": {
                    "id": "cip5vaus4i00",
                    "created": 1647826855412,
                    "text": "回溯算法",
                    "expandState": "expand",
                    "layout": null
                },
                "children": []
            },
            {
                "data": {
                    "id": "cip5vd7f1yw0",
                    "created": 1647826860530,
                    "text": "贪心算法",
                    "expandState": "expand",
                    "layout": null
                },
                "children": []
            },
            {
                "data": {
                    "id": "cip5vlfnusw0",
                    "created": 1647826878443,
                    "text": "动态规划",
                    "expandState": "expand",
                    "layout": null
                },
                "children": []
            },
            {
                "data": {
                    "id": "cip5vrt3jlk0",
                    "created": 1647826892316,
                    "text": "单调栈",
                    "expandState": "expand",
                    "layout": null
                },
                "children": []
            }
        ]
    },
    "template": "default",
    "theme": "classic-compact",
    "version": "1.4.43"
}